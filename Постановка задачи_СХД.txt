В каждом из предложенных вариантов требуется построить UML модель программного обеспечения в среде Modelio. Процесс создания модели состоит из нескольких этапов:
Составление глоссария проекта.
Создание модели вариантов использования.
Анализ вариантов использования (по окончании производится промежуточная сдача задания).
Проектирование системы.
Процесс создания модели должен проходить так, как это описано в методическом пособии (см. Modelio). Структура модели должна соответствовать структуре, предусмотренной Rational Unified Process.
После выполнения третьего этапа модель должна удовлетворять перечисленным ниже требованиям. Глоссарий проекта должен иметь вид таблицы и храниться в отдельном файле. Каждое действующее лицо (actor) и вариант использования должны сопровождаться описанием. Описание действующего лица должно коротко (в одну-две строки) сообщать о роли данного лица. Описание варианта использования должно включать в себя краткое описание, предусловие, потоки событий (основной и альтернативные -- один или более) и постусловие. Все описания действующих лиц и вариантов использования следует собрать в один текстовый файл. Описания должны быть составлены на русском языке. Для одного из вариантов использования должна быть составлена диаграмма деятельности, моделирующая его основной поток и альтернативные потоки. В Analysis Model следует создать диаграмму KeyAbstractions, на которой отображены все классы -- ключевые абстракции и связи между ними. Следует создать пакет, названный Usecase realizations внутри Analysis Model. В этом пакете следует для каждого варианта использования создать:
отдельное взаимодействие (Interaction) с диаграммами последовательности, реализующими вариант использования,
отдельную диаграмму классов View of Participating Classes с классами анализа, участвующими в реализации варианта использования.
Все классы анализа следует разместить в пакете Analysis Model (на верхнем уровне). В Analysis Model следует создать диаграмму Main, на которой отображены все классы анализа и все связи между ними. Все созданные диаграммы должны содержать необходимые пояснения в виде примечаний. В сложных потоках событий ветвления и циклы должны быть промоделированы с помощью блоков на диаграммах последовательности.
В ходе работы рекомендуется перед переходом к анализу вариантов использования согласовать модель вариантов использования с преподавателем.
При проектировании системы (4й этап) требуется:
Разбить систему на уровни.
Создать структуру пакетов внутри Design model, как это описано в методичке.
Разработать диаграмму размещения, в зависимости от варианта задания диаграмма размещения должна показывать расположение процессов системы в вычислительной среде или связи между процессором и устройствами.
Разместить классы по пакетам в Design model, как это описано в методичке и рассказано в лекциях.
Рассмотреть возможность выделения подсистемы, в частности, в большинстве вариантов предусмотрена работа с устойчивыми объектами, её следует поручить подсистеме обеспечения устойчивости (взаимодействия с БД).
Создать интерфейс подсистемы, дать полные сигнатуры его операциям. Описание интерфейса поместить в текстовый файл, где указать краткое описание (ответственность подсистемы) и таблицу с описанием операций (полная сигнатура, описание).
Для подсистемы создать класс-фасад и другие классы подсистемы, связи между подсистемой и другими частями системы показать на отдельной диаграмме классов, связи между классами подсистемы показать на ещё одной диаграмме классов, создать диаграммы последовательности для описания реализации операций интерфейса подсистемы.
Изменить реализации вариантов использования, указав на них «экземпляры» интерфейсов подсистем.
Уточнить связи между классами системы, заменяя ассоциации на агрегации и композиции или зависимости.
Уточнить типы атрибутов классов и дать полные сигнатуры операциям классов.
Каждый класс снабдить описанием, помещённом общий текстовый файл, где ранее описан интерфейс подсистемы, которое должно включать в себя краткое описание (ответственность класса), описание атрибутов в виде таблицы (имя, тип, описание), таблицу с описанием операций (полная сигнатура, описание).
Для описания поведения экземпляров отдельных классов со сложным поведением построить диаграммы состояний (в модели должна быть хотя бы одна нетривиальная диаграмма состояний).
Построить диаграммы деятельности для моделирования сложных методов с альтернативами и/или циклами (в проектной модели должна быть хотя бы одна нетривиальная диаграмма деятельности).
Разработать схему базы данных и отобразить её на диаграмме классов (во всех вариантах кроме 18).



Сетевое хранилище файлов
К списку вариантов

Система поддержки сетевого файлового хранилища позволяет пользователям размещать свои файлы в Веб. Чтобы стать пользователем хранилища нужно зарегистрироваться. В регистрационную форму следует ввести следующие сведения: фамилию, имя и отчество пользователя; его логин и пароль. Если форма заполнена верно и логин не совпадает с логином другого пользователя, регистрационная запись о новом пользователе создаётся.
Чтобы использовать услуги хранилища зарегистрированный пользователь должен войти в систему. При входе он указывает логин и пароль. Залогиненный пользователь попадает на свою персональную страницу. На этой странице отображается список загруженных им файлов и созданных им каталогов, расположенных в корневом каталоге пользователя. Про элементы списка сообщается имя, дата изменений, тип доступа (публичный или приватный), размер (только для файлов). Элементы списка можно сортировать по имени, по дате, по типу, по размеру. Любой файл или каталог может быть переименован, удалён, либо может быть изменён режим доступа к нему. При удалении каталога удаляется всё его содержимое -- все вложенные каталоги и файлы. Хранилище обеспечивает пользователю навигацию по дереву каталогов и файлов. Можно переходить на страницы вложенных каталогов или подыматься на уровень выше -- в родительский каталог.
При загрузке файла автор указывает расположение файла на своём локальном компьютере и его имя, под которым он будет находиться в хранилище. Файл загружается в текущий каталог, страница которого открыта пользователем. Если имя совпадает с именем ранее загруженного файла, выдаётся предупреждение и приглашение перезаписать ранее загруженный файл. Пользователь может согласиться или отказаться. Загрузка файлов доступна пользователю, пока общий их объём меньше 10 Гб. Количество свободного файлового пространства сообщается пользователю на каждой странице.
Загруженные файлы пользователь может скачивать. Для файлов с публичным режимом доступа пользователь может получить ссылки для скачивания их любым пользователем Сети. Для скачивания по таким ссылкам нет необходимости регистрироваться и входить в систему хранилища. По такой ссылке хранилище открывает страницу-форму со сведениями о скачиваемом файле и кнопкой "Скачать", после нажатия на которую передаёт файл пользователю. Если файл удаляется пользователем, он перестаёт быть доступным по публичной ссылке. То же происходит при смене режима доступа на приватный. Файлы, находящиеся в приватном режиме могут быть скачены залогиненным пользователем со страницы каталога, где они помещены.
Пользователь может осуществлять поиск среди своих загруженных файлов и каталогов. При поиске он может указать период, содержащий дату искомого файла, часть имени, ограничение на размер. Результаты поиска выдаются в виде списка с указанием полных имён, содержащих помимо имени элемента последовательность имён каталогов, отражающих путь к файлу из корневого каталога.
Пользователь может изменить свой пароль. Пароль не может быть короче 8 символов.
Пользователь может полностью удалить свою учётную запись вместе со всеми своими каталогами и файлами. После удаления регистрационные данные стираются из системы.
Вариант задания включает в себя разработку схемы базы данных о зарегистрированных пользователях, их файлах и каталогах.